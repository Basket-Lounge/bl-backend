# Generated by Django 5.1.1 on 2025-01-02 07:40

from django.db import migrations

def create_notification_templates(apps, schema_editor):
    NotificationTemplateType = apps.get_model('notification', 'NotificationTemplateType')

    NotificationTemplateType.objects.get_or_create(
        name='default',
        description='Default notification template type'
    )
    NotificationTemplateType.objects.get_or_create(
        name='chat',
        description='Chat notification template type'
    )
    NotificationTemplateType.objects.get_or_create(
        name='game',
        description='Game notification template type'
    )
    post_type, _ = NotificationTemplateType.objects.get_or_create(
        name='post',
        description='Post notification template type'
    )
    comment_type, _ = NotificationTemplateType.objects.get_or_create(
        name='comment',
        description='Comment notification template type'
    )
    NotificationTemplateType.objects.get_or_create(
        name='reply',
        description='Reply notification template type'
    )
    NotificationTemplateType.objects.get_or_create(
        name='team',
        description='Team notification template type'
    )
    NotificationTemplateType.objects.get_or_create(
        name='player',
        description='Player notification template type'
    )
    user_type, _ = NotificationTemplateType.objects.get_or_create(
        name='user',
        description='User notification template type'
    )

    NotificationTemplate = apps.get_model('notification', 'NotificationTemplate')
    NotificationTemplateBody = apps.get_model('notification', 'NotificationTemplateBody')
    Language = apps.get_model('teams', 'Language')
    English = Language.objects.get(name='English')
    Korean = Language.objects.get(name='Korean')

    # User notification templates in English and Korean
    user_login_temp, _ =NotificationTemplate.objects.get_or_create(
        type=user_type,
        subject='user-login',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=user_login_temp,
        language=English,
        body='User has logged in'
    )
    NotificationTemplateBody.objects.get_or_create(
        template=user_login_temp,
        language=Korean,
        body='사용자가 로그인했습니다'
    )

    user_likes_temp, _ = NotificationTemplate.objects.get_or_create(
        type=user_type,
        subject='user-likes',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=user_likes_temp,
        language=English,
        body='The number of likes you have received exceeds <number>',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=user_likes_temp,
        language=Korean,
        body='당신이 받은 좋아요 수가 <number>을(를) 초과했습니다'
    )

    # Post notification templates in English and Korean
    post_likes_temp, _ = NotificationTemplate.objects.get_or_create(
        type=post_type,
        subject='post-likes',
        redirect_url_template='{FRONTEND_URL}/teams/<team_data:id>/posts/<post_data:id>/',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=post_likes_temp,
        language=English,
        body='Your post has received <number> likes',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=post_likes_temp,
        language=Korean,
        body='당신의 게시물이 <number>개의 좋아요를 받았습니다'
    )

    post_comments_temp, _ = NotificationTemplate.objects.get_or_create(
        type=post_type,
        subject='post-comments',
        redirect_url_template='{FRONTEND_URL}/teams/<team_data:id>/posts/<post_data:id>/',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=post_comments_temp,
        language=English,
        body='Your post has received <number> comments',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=post_comments_temp,
        language=Korean,
        body='당신의 게시물이 <number>개의 댓글을 받았습니다'
    )

    post_comment_temp, _ = NotificationTemplate.objects.get_or_create(
        type=post_type,
        subject='post-comment',
        picture_url_template='/logos/<user_data:favorite_team:symbol>.svg',
        redirect_url_template='{FRONTEND_URL}/teams/<team_data:id>/posts/<post_data:id>/',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=post_comment_temp,
        language=English,
        body='<user_data:username> commented on your post',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=post_comment_temp,
        language=Korean,
        body='<user_data:username>님이 당신의 게시물에 댓글을 달았습니다'
    )

    # Comment notification templates in English and Korean
    comment_likes_temp, _ = NotificationTemplate.objects.get_or_create(
        type=comment_type,
        subject='comment-likes',
        redirect_url_template='{FRONTEND_URL}/teams/<team_data:id>/posts/<post_data:id>/',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=comment_likes_temp,
        language=English,
        body='Your comment has received <number> likes',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=comment_likes_temp,
        language=Korean,
        body='당신의 댓글이 <number>개의 좋아요를 받았습니다'
    )

    comment_replies_temp, _ = NotificationTemplate.objects.get_or_create(
        type=comment_type,
        subject='comment-replies',
        redirect_url_template='{FRONTEND_URL}/teams/<team_data:id>/posts/<post_data:id>/',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=comment_replies_temp,
        language=English,
        body='Your comment has received <number> replies',
    )
    NotificationTemplateBody.objects.get_or_create(
        template=comment_replies_temp,
        language=Korean,
        body='당신의 댓글이 <number>개의 답글을 받았습니다'
    )

class Migration(migrations.Migration):

    dependencies = [
        ('notification', '0005_remove_notificationtemplate_body_and_more'),
    ]

    operations = [
        migrations.RunPython(create_notification_templates),
    ]
