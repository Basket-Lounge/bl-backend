# Generated by Django 5.1.1 on 2025-01-09 09:50

from django.db import migrations


def create_notification_template_type_display_name(apps, schema_editor):
    NotificationTemplateTypeDisplayName = apps.get_model('notification', 'NotificationTemplateTypeDisplayName')

    NotificationTemplateType = apps.get_model('notification', 'NotificationTemplateType')
    default_type, _ = NotificationTemplateType.objects.get_or_create(
        name='default',
        description='Default notification template type'
    )
    chat_type, _ = NotificationTemplateType.objects.get_or_create(
        name='chat',
        description='Chat notification template type'
    )
    game_type, _ = NotificationTemplateType.objects.get_or_create(
        name='game',
        description='Game notification template type'
    )
    post_type, _ = NotificationTemplateType.objects.get_or_create(
        name='post',
        description='Post notification template type'
    )
    comment_type, _ = NotificationTemplateType.objects.get_or_create(
        name='comment',
        description='Comment notification template type'
    )
    reply_type, _ = NotificationTemplateType.objects.get_or_create(
        name='reply',
        description='Reply notification template type'
    )
    team_type, _ = NotificationTemplateType.objects.get_or_create(
        name='team',
        description='Team notification template type'
    )
    player_type, _ = NotificationTemplateType.objects.get_or_create(
        name='player',
        description='Player notification template type'
    )
    user_type, _ = NotificationTemplateType.objects.get_or_create(
        name='user',
        description='User notification template type'
    )

    Language = apps.get_model('teams', 'Language')
    English = Language.objects.get(name='English')
    Korean = Language.objects.get(name='Korean')

    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=default_type,
        language=English,
        name='Default'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=chat_type,
        language=English,
        name='Chat'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=game_type,
        language=English,
        name='Game'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=post_type,
        language=English,
        name='Post'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=comment_type,
        language=English,
        name='Comment'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=reply_type,
        language=English,
        name='Reply'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=team_type,
        language=English,
        name='Team'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=player_type,
        language=English,
        name='Player'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=user_type,
        language=English,
        name='User'
    )

    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=default_type,
        language=Korean,
        name='기본'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=chat_type,
        language=Korean,
        name='채팅'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=game_type,
        language=Korean,
        name='게임'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=post_type,
        language=Korean,
        name='포스트'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=comment_type,
        language=Korean,
        name='댓글'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=reply_type,
        language=Korean,
        name='답글'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=team_type,
        language=Korean,
        name='팀'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=player_type,
        language=Korean,
        name='선수'
    )
    NotificationTemplateTypeDisplayName.objects.get_or_create(
        type=user_type,
        language=Korean,
        name='사용자'
    )

class Migration(migrations.Migration):
    dependencies = [
        ('notification', '0009_notificationtemplatetypedisplayname'),
    ]

    operations = [
        migrations.RunPython(create_notification_template_type_display_name)
    ]
